variables:
  - name: agent_pool
    value: "Azure Pipelines"
  - name: image_label
    value: "ubuntu-latest"
  - group: terraform

stages:
- stage: first
  jobs:
    - job: set_variables
      pool:
        name: $(agent_pool)
        vmImage: $(image_label)
      steps:
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              echo hey
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              echo "##vso[task.setvariable variable=first]eh?"
              echo "##vso[task.setvariable variable=second]second"
        - template: templates/use-variables.yml
          parameters:
            variables:
              - $(first)
              - ${{ variables.second }}
              - ${{ format('{0}', variables.first) }}
        - task: SystemsManagerGetParameter@1
          name: "A"
          inputs:
            awsCredentials: 'ci'
            regionName: 'us-east-2'
            readMode: 'single'
            parameterName: 'hey'
        - task: Bash@3
          name: send_variable
          inputs:
            targetType: inline
            script: |
              echo ##vso[task.setvariable variable=carry_me;isOutput=true]$(hey)
              echo in first stage, hey=$(hey)

- stage: second
  dependsOn: first
  jobs:
  - job: False
    condition: ne(stageDependencies.first.set_variables.outputs['send_variable.carry_me'], 'it worked')
    steps:
      - script: echo should skip

  - job: True
    condition: eq(stageDependencies.first.set_variables.outputs['send_variable.carry_me'], 'it worked')
    steps:
      - script: echo should run

  - job: receive_variable
    variables:
      test_one: $[stageDependencies.first.set_variables.outputs['send_variable.carry_me']]
      test_two: $[dependencies.first.set_variables.outputs['send_variable.carry_me']]
      test_three: $[stageDependencies.first.outputs['set_variables.send_variable.carry_me']]
    pool:
      name: k8s-ci
    steps:
      - task: Bash@3
        inputs:
          targetType: inline
          script: |
            echo test_one is $(test_one) #fail
            echo test_two is $(test_two)
            echo test_three is $(test_three)

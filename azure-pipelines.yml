# a comment
variables:
  - name: agent_pool
    value: "Azure Pipelines"
  - name: image_label
    value: "ubuntu-latest"

stages:
- stage: first
  jobs:
    - job: set_variables
      pool:
        name: $(agent_pool)
        vmImage: $(image_label)
      steps:
        - task: Bash@3
          name: set_variables
          inputs:
            targetType: 'inline'
            script: |
              echo "##vso[task.setvariable variable=first]first"
              echo "##vso[task.setvariable variable=second;isOutput=true]second"
        - template: templates/use-variables.yml
          parameters:
            variables:
              - $(first)                              #pass
              - ${{ variables.second }}               #fail
              - ${{ format('{0}', variables.first) }} #fail
        # Set a variable whose scope spans stages
        - task: Bash@3
          name: send_variable
          inputs:
            targetType: inline
            script: |
              echo "##vso[task.setvariable variable=carried;isOutput=true]$(hey)"
              echo "in first stage, hey=$(hey)"
    - job: reuse_variable_different_job
      dependsOn: set_variables
      variables:
        test_one: $[dependencies.set_variables.outputs['set_variables.second']]
      pool:
        name: $(agent_pool)
        vmImage: $(image_label)
      steps:
        - task: Bash@3
          displayName: reuse_variable_different_job
          inputs:
            targetType: inline
            script: |
              echo test_one is $(test_one)
    # Pass a parameter that says which variable to use in a downstream job.
    - job: use_runtime_expression
      variables:
        test_one: "value will be exposed"
        test_two: "value will also be exposed"
      steps:
        - template: templates/use-variables-in-parameter.yml
          parameters:
            variables:
            - test_one
            - test_two

- stage: second
  # by default, each stage dependsOn the preceeding stage, otherwise, override:
  dependsOn: first
  jobs:
  - job: reuse_variable_different_stage
    variables:
      test_one: $[stageDependencies.first.set_variables.outputs['send_variable.carried']]   #pass
      test_two: $[dependencies.first.set_variables.outputs['send_variable.carried']]        #fail
      test_three: $[stageDependencies.first.outputs['set_variables.send_variable.carried']] #fail
    pool:
      name: $(agent_pool)
      vmImage: $(image_label)
    steps:
      - task: Bash@3
        displayName: Use variable from prior stage
        inputs:
          targetType: inline
          script: |
            echo test_one is $(test_one)
            echo test_two is $(test_two)
            echo test_three is $(test_three)
